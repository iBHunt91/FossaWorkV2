# FossaWork V2 Kubernetes Secret Template
# IMPORTANT: This is a template file. DO NOT commit actual secrets to version control.
# Use a secure secret management solution like Sealed Secrets, External Secrets Operator, or cloud provider solutions.

apiVersion: v1
kind: Secret
metadata:
  name: fossawork-secrets
  namespace: fossawork
  labels:
    app: fossawork
type: Opaque
stringData:
  # Database credentials
  database-url: "postgresql://username:password@postgres:5432/fossawork?sslmode=require"
  database-read-url: "postgresql://username:password@postgres-read:5432/fossawork?sslmode=require"
  
  # Redis credentials
  redis-url: "redis://:password@redis:6379/0"
  
  # Application secrets
  secret-key: "CHANGE_ME_TO_RANDOM_SECRET_KEY"
  master-key: "CHANGE_ME_TO_RANDOM_MASTER_KEY"
  
  # JWT keys (for RS256 algorithm)
  jwt-private-key: |
    -----BEGIN RSA PRIVATE KEY-----
    CHANGE_ME_TO_ACTUAL_PRIVATE_KEY
    -----END RSA PRIVATE KEY-----
  
  jwt-public-key: |
    -----BEGIN PUBLIC KEY-----
    CHANGE_ME_TO_ACTUAL_PUBLIC_KEY
    -----END PUBLIC KEY-----
  
  # Email configuration
  smtp-host: "smtp.example.com"
  smtp-username: "noreply@fossawork.com"
  smtp-password: "CHANGE_ME"
  
  # Pushover configuration
  pushover-app-token: "CHANGE_ME"
  
  # External service credentials
  workfossa-api-key: "CHANGE_ME"
  
  # Monitoring credentials
  grafana-admin-password: "CHANGE_ME"
  prometheus-remote-write-url: "https://prometheus.example.com/write"
  prometheus-remote-write-token: "CHANGE_ME"
---
# Separate secret for JWT keys with stricter permissions
apiVersion: v1
kind: Secret
metadata:
  name: fossawork-jwt-keys
  namespace: fossawork
  labels:
    app: fossawork
    component: auth
type: Opaque
data:
  # Base64 encoded JWT keys
  private.pem: "CHANGE_ME_TO_BASE64_ENCODED_PRIVATE_KEY"
  public.pem: "CHANGE_ME_TO_BASE64_ENCODED_PUBLIC_KEY"
---
# Image pull secret for private registries
apiVersion: v1
kind: Secret
metadata:
  name: fossawork-registry
  namespace: fossawork
  labels:
    app: fossawork
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: "CHANGE_ME_TO_BASE64_ENCODED_DOCKER_CONFIG"
---
# TLS certificates for ingress
apiVersion: v1
kind: Secret
metadata:
  name: fossawork-tls
  namespace: fossawork
  labels:
    app: fossawork
type: kubernetes.io/tls
data:
  tls.crt: "CHANGE_ME_TO_BASE64_ENCODED_CERTIFICATE"
  tls.key: "CHANGE_ME_TO_BASE64_ENCODED_PRIVATE_KEY"
---
# Backup encryption keys
apiVersion: v1
kind: Secret
metadata:
  name: fossawork-backup-keys
  namespace: fossawork
  labels:
    app: fossawork
    component: backup
type: Opaque
stringData:
  encryption-key: "CHANGE_ME_TO_RANDOM_ENCRYPTION_KEY"
  s3-access-key: "CHANGE_ME"
  s3-secret-key: "CHANGE_ME"
---
# Example: Using External Secrets Operator
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: fossawork-secrets
#   namespace: fossawork
# spec:
#   secretStoreRef:
#     name: aws-secrets-manager
#     kind: SecretStore
#   target:
#     name: fossawork-secrets
#     creationPolicy: Owner
#   data:
#   - secretKey: database-url
#     remoteRef:
#       key: fossawork/production/database
#       property: url
#   - secretKey: secret-key
#     remoteRef:
#       key: fossawork/production/app
#       property: secret-key
#   - secretKey: master-key
#     remoteRef:
#       key: fossawork/production/app
#       property: master-key