# FossaWork V2 Frontend Dockerfile
# Multi-stage build for React/Vite application

ARG NODE_VERSION=20
ARG NGINX_VERSION=alpine

# Build stage
FROM node:${NODE_VERSION}-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY frontend/package*.json ./frontend/

# Install dependencies with cache mount
RUN --mount=type=cache,target=/root/.npm \
    npm ci --prefer-offline --no-audit --loglevel error

WORKDIR /app/frontend
RUN --mount=type=cache,target=/root/.npm \
    npm ci --prefer-offline --no-audit --loglevel error

# Copy source code
COPY frontend/ .

# Build arguments for environment variables
ARG VITE_API_URL
ARG VITE_APP_NAME="FossaWork V2"
ARG VITE_APP_VERSION="2.0.0"

# Build the application
RUN npm run build

# Development stage
FROM node:${NODE_VERSION}-alpine AS development

# Install development tools
RUN apk add --no-cache \
    git \
    vim

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY frontend/package*.json ./frontend/

# Install dependencies
RUN npm ci

WORKDIR /app/frontend
RUN npm ci

# Copy source code
COPY frontend/ .

# Expose Vite dev server port
EXPOSE 5173

# Development server
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0"]

# Production stage
FROM nginx:${NGINX_VERSION} AS production

# Install runtime dependencies
RUN apk add --no-cache \
    curl \
    tzdata

# Security: Create non-root user
RUN addgroup -g 101 -S nginx && \
    adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx

# Copy built application from builder
COPY --from=builder /app/frontend/dist /usr/share/nginx/html

# Copy nginx configuration
COPY config/docker/nginx-frontend.conf /etc/nginx/nginx.conf
COPY config/docker/nginx-security.conf /etc/nginx/conf.d/security.conf

# Security hardening
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d && \
    touch /var/run/nginx.pid && \
    chown -R nginx:nginx /var/run/nginx.pid

# Remove default nginx config
RUN rm -f /etc/nginx/conf.d/default.conf

# Add health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Switch to non-root user
USER nginx

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]